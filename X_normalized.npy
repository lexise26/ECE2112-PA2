{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "a06fe340-93b9-4b54-a4a1-b4e74abe68ea",
   "metadata": {},
   "source": [
    "## EXPERIMENT 2: NUMERICAL PYTHON (NUMPY)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b4a7041-13fe-4977-a702-d4a0160fb9de",
   "metadata": {},
   "source": [
    "#### Custodio, Louise Angela G.\n",
    "#### 2ECE-D"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9b087af2-0d73-406d-bdb9-d851bed0e913",
   "metadata": {},
   "source": [
    "### #1 NORMALIZATION PROBLEM:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "36adcd17-ee44-4dea-a376-86cab2a980b5",
   "metadata": {},
   "source": [
    "Normalization is one of the most basic preprocessing techniques in\r\n",
    "data analytics. This involves centering and scaling process. Centering means subtracting the data from the\r\n",
    "mean and scaling means dividing with its standard deviation. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c9760532-ccee-47c4-9c15-3574bbc621e5",
   "metadata": {},
   "source": [
    "Expected Input: \n",
    "A randomly generated 5x5 NumPy array of float values between 0 and 1. The first matrix represents the original dataset ùëã. \n",
    "\n",
    "(Note: There is no manual input as the matrix will be randomly generated.)\n",
    "\n",
    "Expected Output: \n",
    "A normalized 5x5 NumPy array where each value is normalized according to the formula ùëç = (ùëã-ùë•bar)/ùúé, with a mean of 0 and a standard deviation of 1."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "7029e95a-3b38-4357-ae1b-19c41e44b92f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "d631f934-3585-4982-9f4c-5706b06f2067",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original Array X:\n",
      "[[0.38009197 0.50871626 0.44262805 0.44691425 0.50439436]\n",
      " [0.5754207  0.52932188 0.683138   0.38364921 0.25313189]\n",
      " [0.60693845 0.3206737  0.16880233 0.54300127 0.65577083]\n",
      " [0.36749682 0.67090064 0.21368103 0.5367353  0.81748189]\n",
      " [0.18452525 0.4817567  0.45957509 0.89109004 0.7950087 ]]\n",
      " \n",
      "Array X Mean:  0.49683378513871446\n",
      " \n",
      "Array X Standard Deviation:  0.18832527888198464\n",
      " \n",
      "Normalization of X:\n",
      "[[-0.61989456  0.06309551 -0.28783036 -0.2650708   0.04014635]\n",
      " [ 0.41729351  0.17251053  0.98926824 -0.60100577 -1.29404769]\n",
      " [ 0.58465152 -0.9354033  -1.74183445  0.24514756  0.84394962]\n",
      " [-0.68677434  0.92428834 -1.50353024  0.21187551  1.70262912]\n",
      " [-1.6583463  -0.08005873 -0.19784222  2.09348558  1.58329737]]\n"
     ]
    }
   ],
   "source": [
    "X = np.random.random((5,5))  \n",
    "print(\"Original Array X:\")   \n",
    "print(X)   \n",
    "print(\" \")   \n",
    "\n",
    "xbar = X.mean()   \n",
    "print(\"Array X Mean: \", xbar)   \n",
    "print(\" \")   \n",
    "\n",
    "sd = X.std()  \n",
    "print(\"Array X Standard Deviation: \", sd)  \n",
    "print(\" \")  \n",
    "\n",
    "Z = (X - xbar)/(sd)   \n",
    "print(\"Normalization of X:\")  \n",
    "print(Z)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9686ed21-35b0-4629-a9b4-83f3cf71aae8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
