{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ca6d59e0-94fd-4b70-ae3d-a3ba29ccb775",
   "metadata": {},
   "source": [
    "## EXPERIMENT 2: NUMERICAL PYTHON (NUMPY)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "26f46497-5451-4e70-8a96-9aaebefe4d01",
   "metadata": {},
   "source": [
    "#### Custodio, Louise Angela G.\n",
    "#### 2ECE-D"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "74613305-0288-495c-af9c-9e9a3fc9eab9",
   "metadata": {},
   "source": [
    "## #2 DIVISIBLE BY 3 PROBLEM:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0a742d4d-9d94-4217-9428-fbeb21459e5f",
   "metadata": {},
   "source": [
    "The task involves creating a 10x10 NumPy array ùê¥, where each element represents the square of the first 100 positive integers. \n",
    "From this array, the elements divisible by 3 must be identified."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a5e83016-3341-46ca-b8b5-f7a59804e03b",
   "metadata": {},
   "source": [
    "Expected Input: \n",
    "A 10x10 NumPy array A where each element is the square of the first 100 positive integers that range to 1-1000.\n",
    "\n",
    "(Note: There is no manual input as the first 100 positive integers will be automatically squared.)\n",
    "\n",
    "Expected Output: \n",
    "A NumPy array containing only the elements from the input that are divisible by 3."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ce3c1e87-6567-48f1-963e-963c68f70a3e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2ff70105-aec4-43eb-8458-9c1639a76196",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A = \n",
      "[[    1     4     9    16    25    36    49    64    81   100]\n",
      " [  121   144   169   196   225   256   289   324   361   400]\n",
      " [  441   484   529   576   625   676   729   784   841   900]\n",
      " [  961  1024  1089  1156  1225  1296  1369  1444  1521  1600]\n",
      " [ 1681  1764  1849  1936  2025  2116  2209  2304  2401  2500]\n",
      " [ 2601  2704  2809  2916  3025  3136  3249  3364  3481  3600]\n",
      " [ 3721  3844  3969  4096  4225  4356  4489  4624  4761  4900]\n",
      " [ 5041  5184  5329  5476  5625  5776  5929  6084  6241  6400]\n",
      " [ 6561  6724  6889  7056  7225  7396  7569  7744  7921  8100]\n",
      " [ 8281  8464  8649  8836  9025  9216  9409  9604  9801 10000]]\n",
      " \n",
      "Elements divisible by 3: \n",
      "B = \n",
      "[[   9   36   81  144  225  324  441  576  729  900 1089]\n",
      " [1296 1521 1764 2025 2304 2601 2916 3249 3600 3969 4356]\n",
      " [4761 5184 5625 6084 6561 7056 7569 8100 8649 9216 9801]]\n"
     ]
    }
   ],
   "source": [
    "a = np.array(range(1,101))**2   \n",
    "A = np.resize(a, (10,10))  \n",
    "print(\"A = \")   \n",
    "print(A)   \n",
    "print(\" \")   \n",
    "\n",
    "print(\"Elements divisible by 3: \")  \n",
    "print(\"B = \")   \n",
    "div = A[A%3==0]   \n",
    "elem = np.resize(div, (3,11))   \n",
    "print(elem)   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e7a5b790-def2-42c3-890f-319e3c3eb743",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
